{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.23.1.45101",
      "templateHash": "599936439013385424"
    }
  },
  "parameters": {
    "devcenterName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of Dev Center e.g. dc-devbox-test"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of Dev Center project e.g. dcprj-devbox-test"
      }
    },
    "networkConnectionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of Network Connection e.g. con-devbox-test"
      }
    },
    "userIdentityName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of Dev Center user identity"
      }
    },
    "existingSubnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet resource id if the user wants to use existing subnet"
      }
    },
    "networkVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the Virtual Network e.g. vnet-dcprj-devbox-test-eastus"
      }
    },
    "networkSubnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "the subnet name of Dev Box e.g. default"
      }
    },
    "networkVnetAddressPrefixes": {
      "type": "string",
      "defaultValue": "10.4.0.0/16",
      "metadata": {
        "description": "The vnet address prefixes of Dev Box e.g. 10.4.0.0/16"
      }
    },
    "networkSubnetAddressPrefixes": {
      "type": "string",
      "defaultValue": "10.4.0.0/24",
      "metadata": {
        "description": "The subnet address prefixes of Dev Box e.g. 10.4.0.0/24"
      }
    },
    "userPrincipalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The user or group id that will be granted to Devcenter Dev Box User and Deployment Environments User role"
      }
    },
    "userPrincipalType": {
      "type": "string",
      "defaultValue": "User",
      "allowedValues": [
        "Group",
        "User"
      ],
      "metadata": {
        "description": "The type of principal id: User or Group"
      }
    },
    "devboxPoolName": {
      "type": "string",
      "defaultValue": "customization-pool",
      "metadata": {
        "description": "The name of Dev Box pool"
      }
    },
    "adeKeyvaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of ADE key vault"
      }
    },
    "adeKeyvaultSecretName": {
      "type": "string",
      "defaultValue": "repo-pat-secret",
      "metadata": {
        "description": "The name of ADE key vault secret for catalog to access the repo"
      }
    },
    "adeKeyvaultSecretValue": {
      "type": "securestring",
      "metadata": {
        "description": "The personal access token of Github/ADO repo"
      }
    },
    "adeCatalogName": {
      "type": "string",
      "defaultValue": "test-catalog",
      "metadata": {
        "description": "The name of catalog"
      }
    },
    "adeCatalogRepositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/luxu-ms/deployment-environments.git",
      "metadata": {
        "description": "The catalog repository URL of ADE templates"
      }
    },
    "adeCatalogRepositoryBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "The catalog repository branch of ADE templates"
      }
    },
    "adeCatalogItemRootPath": {
      "type": "string",
      "defaultValue": "/Environments",
      "metadata": {
        "description": "The root path of catalog repository including ADE templates"
      }
    },
    "customizedCatalogName": {
      "type": "string",
      "defaultValue": "customization-catalog",
      "metadata": {
        "description": "The name of catalog"
      }
    },
    "customizedCatalogRepositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/luxu-ms/devbox-customization-openai.git",
      "metadata": {
        "description": "The catalog repository URL of ADE templates"
      }
    },
    "customizedCatalogRepositoryBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "The catalog repository branch of ADE templates"
      }
    },
    "customizedCatalogItemRootPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The root path of catalog repository including ADE templates"
      }
    },
    "customizationNameInDevBoxYaml": {
      "type": "string",
      "defaultValue": "devbox-customization"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Primary location for all resources e.g. eastus"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkConnections": "con-",
      "devcenter": "dc-",
      "devcenterProject": "dcprj-",
      "devcenterNetworkingResourceGroup": "ni-",
      "keyvault": "kv-",
      "computeGalleries": "gal",
      "managedIdentityUserAssignedIdentities": "id-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(resourceGroup().id, parameters('location')))]",
    "ncName": "[if(not(empty(parameters('networkConnectionName'))), parameters('networkConnectionName'), format('{0}{1}', variables('abbrs').networkConnections, variables('resourceToken')))]",
    "kvName": "[if(not(empty(parameters('adeKeyvaultName'))), parameters('adeKeyvaultName'), format('{0}{1}', variables('abbrs').keyvault, variables('resourceToken')))]",
    "idName": "[if(not(empty(parameters('userIdentityName'))), parameters('userIdentityName'), format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken')))]",
    "dcName": "[if(not(empty(parameters('devcenterName'))), parameters('devcenterName'), format('{0}{1}', variables('abbrs').devcenter, variables('resourceToken')))]",
    "prjName": "[if(not(empty(parameters('projectName'))), parameters('projectName'), format('{0}{1}', variables('abbrs').devcenterProject, variables('resourceToken')))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "[variables('idName')]",
      "location": "[parameters('location')]"
    },
    {
      "condition": "[empty(parameters('existingSubnetId'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefixes": {
            "value": "[parameters('networkVnetAddressPrefixes')]"
          },
          "vnetName": "[if(not(empty(parameters('networkVnetName'))), createObject('value', parameters('networkVnetName')), createObject('value', format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))))]",
          "subnetAddressPrefixes": {
            "value": "[parameters('networkSubnetAddressPrefixes')]"
          },
          "subnetName": "[if(not(empty(parameters('networkSubnetName'))), createObject('value', parameters('networkSubnetName')), createObject('value', format('{0}{1}', variables('abbrs').networkVirtualNetworksSubnets, variables('resourceToken'))))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "10527041903701611431"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Virtual Network"
              }
            },
            "subnetName": {
              "type": "string",
              "metadata": {
                "description": "the app subnet name of Dev Box"
              }
            },
            "vnetAddressPrefixes": {
              "type": "string",
              "metadata": {
                "description": "The address prefixes of the vnet"
              }
            },
            "subnetAddressPrefixes": {
              "type": "string",
              "metadata": {
                "description": "The subnet address prefixes for Dev Box"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of the resource"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefixes')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetAddressPrefixes')]"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "subnetName": {
              "type": "string",
              "value": "[parameters('subnetName')]"
            },
            "subnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('dcName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "devcenterName": {
            "value": "[variables('dcName')]"
          },
          "subnetId": "[if(not(empty(parameters('existingSubnetId'))), createObject('value', parameters('existingSubnetId')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.subnetId.value))]",
          "networkConnectionName": {
            "value": "[variables('ncName')]"
          },
          "projectName": {
            "value": "[variables('prjName')]"
          },
          "networkingResourceGroupName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').devcenterNetworkingResourceGroup, variables('ncName'), parameters('location'))]"
          },
          "principalId": {
            "value": "[parameters('userPrincipalId')]"
          },
          "principalType": {
            "value": "[parameters('userPrincipalType')]"
          },
          "secretIdentifier": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvaultSecret'), '2022-09-01').outputs.secretIdentifier.value]"
          },
          "managedIdentityName": {
            "value": "[variables('idName')]"
          },
          "devboxPoolName": {
            "value": "[parameters('devboxPoolName')]"
          },
          "catalogName": {
            "value": "[parameters('adeCatalogName')]"
          },
          "adeCatalogRepositoryUrl": {
            "value": "[parameters('adeCatalogRepositoryUrl')]"
          },
          "adeCatalogItemRootPath": {
            "value": "[parameters('adeCatalogItemRootPath')]"
          },
          "adeCatalogRepositoryBranch": {
            "value": "[parameters('adeCatalogRepositoryBranch')]"
          },
          "customizedCatalogItemRootPath": {
            "value": "[parameters('customizedCatalogItemRootPath')]"
          },
          "customizedCatalogName": {
            "value": "[parameters('customizedCatalogName')]"
          },
          "customizedCatalogRepositoryBranch": {
            "value": "[parameters('customizedCatalogRepositoryBranch')]"
          },
          "customizedCatalogRepositoryUrl": {
            "value": "[parameters('customizedCatalogRepositoryUrl')]"
          },
          "customizationNameInDevBoxYaml": {
            "value": "[parameters('customizationNameInDevBoxYaml')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "12203198604683406782"
            }
          },
          "parameters": {
            "devcenterName": {
              "type": "string"
            },
            "networkConnectionName": {
              "type": "string"
            },
            "networkingResourceGroupName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "projectName": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "secretIdentifier": {
              "type": "securestring"
            },
            "adeCatalogRepositoryUrl": {
              "type": "string"
            },
            "adeCatalogRepositoryBranch": {
              "type": "string"
            },
            "adeCatalogItemRootPath": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "managedIdentityName": {
              "type": "string"
            },
            "customizedCatalogName": {
              "type": "string"
            },
            "customizedCatalogRepositoryUrl": {
              "type": "string"
            },
            "customizedCatalogRepositoryBranch": {
              "type": "string"
            },
            "customizedCatalogItemRootPath": {
              "type": "string"
            },
            "customizationNameInDevBoxYaml": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "User",
              "allowedValues": [
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "catalogName": {
              "type": "string"
            },
            "devboxPoolName": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": {
              "envMapping": [
                {
                  "name": "Dev",
                  "deploymentTargetId": ""
                },
                {
                  "name": "Test",
                  "deploymentTargetId": ""
                },
                {
                  "name": "PreProd",
                  "deploymentTargetId": ""
                },
                {
                  "name": "Prod",
                  "deploymentTargetId": ""
                }
              ]
            },
            "DEVCENTER_DEVBOX_USER_ROLE": "45d50f46-0b78-4001-a660-4198cbe8cd05",
            "DEPLOYMENT_ENVIRONMENTS_USER_ROLE": "18e40d4e-8d2e-438d-97e1-9528336e149c",
            "OWNER_ROLE": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "devceterSettings": "[variables('$fxv#0')]"
          },
          "resources": [
            {
              "type": "Microsoft.DevCenter/devcenters",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('devcenterName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
                }
              }
            },
            {
              "type": "Microsoft.DevCenter/networkConnections",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('networkConnectionName')]",
              "location": "[parameters('location')]",
              "properties": {
                "domainJoinType": "AzureADJoin",
                "subnetId": "[parameters('subnetId')]",
                "networkingResourceGroupName": "[parameters('networkingResourceGroupName')]"
              }
            },
            {
              "type": "Microsoft.DevCenter/devcenters/attachednetworks",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), parameters('networkConnectionName'))]",
              "properties": {
                "networkConnectionId": "[resourceId('Microsoft.DevCenter/networkConnections', parameters('networkConnectionName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]",
                "[resourceId('Microsoft.DevCenter/networkConnections', parameters('networkConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/projects",
              "apiVersion": "2022-11-11-preview",
              "name": "[parameters('projectName')]",
              "location": "[parameters('location')]",
              "properties": {
                "devCenterId": "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/projects/pools",
              "apiVersion": "2023-10-01-preview",
              "name": "[format('{0}/{1}', parameters('projectName'), parameters('devboxPoolName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "devBoxDefinitionName": "[format('{0}/{1}', parameters('customizedCatalogName'), parameters('customizationNameInDevBoxYaml'))]",
                "networkConnectionName": "[parameters('networkConnectionName')]",
                "licenseType": "Windows_Client",
                "localAdministrator": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters/catalogs', parameters('devcenterName'), parameters('customizedCatalogName'))]",
                "[resourceId('Microsoft.DevCenter/networkConnections', parameters('networkConnectionName'))]",
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('principalId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.DevCenter/projects/{0}', parameters('projectName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('DEVCENTER_DEVBOX_USER_ROLE'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('DEVCENTER_DEVBOX_USER_ROLE'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "copy": {
                "name": "envTypes",
                "count": "[length(variables('devceterSettings').envMapping)]"
              },
              "type": "Microsoft.DevCenter/devcenters/environmentTypes",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), variables('devceterSettings').envMapping[copyIndex()].name)]",
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/devcenters/catalogs",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), parameters('catalogName'))]",
              "properties": {
                "gitHub": {
                  "branch": "[parameters('adeCatalogRepositoryBranch')]",
                  "path": "[parameters('adeCatalogItemRootPath')]",
                  "secretIdentifier": "[parameters('secretIdentifier')]",
                  "uri": "[parameters('adeCatalogRepositoryUrl')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/devcenters/catalogs",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), parameters('customizedCatalogName'))]",
              "properties": {
                "gitHub": {
                  "branch": "[parameters('customizedCatalogRepositoryBranch')]",
                  "path": "[parameters('customizedCatalogItemRootPath')]",
                  "secretIdentifier": "[parameters('secretIdentifier')]",
                  "uri": "[parameters('customizedCatalogRepositoryUrl')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "copy": {
                "name": "projectEnvironmentTypes",
                "count": "[length(variables('devceterSettings').envMapping)]"
              },
              "type": "Microsoft.DevCenter/projects/environmentTypes",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('projectName'), variables('devceterSettings').envMapping[copyIndex()].name)]",
              "properties": {
                "status": "Enabled",
                "creatorRoleAssignment": {
                  "roles": {
                    "[format('{0}', variables('OWNER_ROLE'))]": {}
                  }
                },
                "deploymentTargetId": "[if(not(empty(variables('devceterSettings').envMapping[copyIndex()].deploymentTargetId)), format('/subscriptions/{0}', variables('devceterSettings').envMapping[copyIndex()].deploymentTargetId), subscription().id)]",
                "userRoleAssignments": {
                  "[format('{0}', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2022-01-31-preview').principalId)]": {
                    "roles": {
                      "[format('{0}', variables('OWNER_ROLE'))]": {}
                    }
                  }
                }
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('principalId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.DevCenter/projects/{0}', parameters('projectName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('DEPLOYMENT_ENVIRONMENTS_USER_ROLE'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('DEPLOYMENT_ENVIRONMENTS_USER_ROLE'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "assignOwner",
              "subscriptionId": "[subscription().subscriptionId]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2022-01-31-preview').principalId]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('OWNER_ROLE')]"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.23.1.45101",
                      "templateHash": "6730853705589355865"
                    }
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(empty(parameters('principalId')))]",
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "devcenterName": {
              "type": "string",
              "value": "[parameters('devcenterName')]"
            },
            "networkConnectionName": {
              "type": "string",
              "value": "[parameters('networkConnectionName')]"
            },
            "projectName": {
              "type": "string",
              "value": "[parameters('projectName')]"
            },
            "poolName": {
              "type": "string",
              "value": "[parameters('devboxPoolName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyvaultSecret')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('kvName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[variables('kvName')]"
          },
          "principalId": {
            "value": "[parameters('userPrincipalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "8199967153549391705"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "principalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
              }
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvaultSecret",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('kvName')), '2022-09-01').outputs.name.value]"
          },
          "name": {
            "value": "[parameters('adeKeyvaultSecretName')]"
          },
          "secretValue": {
            "value": "[parameters('adeKeyvaultSecretValue')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "17356356021486640000"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "keyVaultName": {
              "type": "string"
            },
            "contentType": {
              "type": "string",
              "defaultValue": "string"
            },
            "secretValue": {
              "type": "securestring",
              "metadata": {
                "description": "The value of the secret. Provide only derived values like blob storage access, but do not hard code any secrets in your templates"
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true
            },
            "exp": {
              "type": "int",
              "defaultValue": 0
            },
            "nbf": {
              "type": "int",
              "defaultValue": 0
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
              "tags": "[parameters('tags')]",
              "properties": {
                "attributes": {
                  "enabled": "[parameters('enabled')]",
                  "exp": "[parameters('exp')]",
                  "nbf": "[parameters('nbf')]"
                },
                "contentType": "[parameters('contentType')]",
                "value": "[parameters('secretValue')]"
              }
            }
          ],
          "outputs": {
            "secretIdentifier": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('name')), '2022-07-01').secretUriWithVersion]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('kvName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvaultAccess",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('kvName')), '2022-09-01').outputs.name.value]"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('idName')), '2022-01-31-preview').principalId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "10398318595154754242"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "add"
            },
            "keyVaultName": {
              "type": "string"
            },
            "permissions": {
              "type": "object",
              "defaultValue": {
                "secrets": [
                  "get",
                  "list"
                ]
              }
            },
            "principalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
              "properties": {
                "accessPolicies": [
                  {
                    "objectId": "[parameters('principalId')]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": "[parameters('permissions')]"
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('kvName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('idName'))]"
      ]
    }
  ],
  "outputs": {
    "devcetnerName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('dcName')), '2022-09-01').outputs.devcenterName.value]"
    },
    "projectName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('dcName')), '2022-09-01').outputs.projectName.value]"
    },
    "networkConnectionName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('dcName')), '2022-09-01').outputs.networkConnectionName.value]"
    },
    "vnetName": {
      "type": "string",
      "value": "[if(empty(parameters('existingSubnetId')), reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.vnetName.value, '')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[if(empty(parameters('existingSubnetId')), reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.subnetName.value, '')]"
    },
    "poolName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('dcName')), '2022-09-01').outputs.poolName.value]"
    }
  }
}